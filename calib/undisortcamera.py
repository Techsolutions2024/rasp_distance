import cv2
import numpy as np

# Load th√¥ng s·ªë hi·ªáu ch·ªânh
data = np.load("camera_calib.npz")
mtx = data["camera_matrix"]
dist = data["dist_coeffs"]

# Kh·ªüi t·∫°o webcam (ƒë·ªïi s·ªë n·∫øu c·∫ßn)
cap = cv2.VideoCapture(1)

if not cap.isOpened():
    print("‚ùå Kh√¥ng m·ªü ƒë∆∞·ª£c webcam.")
    exit()

print("üé• ƒêang ch·∫°y undistort live. Nh·∫•n 'q' ƒë·ªÉ tho√°t.")

while True:
    ret, frame = cap.read()
    if not ret:
        print("‚ùå Kh√¥ng ƒë·ªçc ƒë∆∞·ª£c khung h√¨nh.")
        break

    h, w = frame.shape[:2]

    # T√≠nh to√°n ma tr·∫≠n camera m·ªõi
    newcameramtx, roi = cv2.getOptimalNewCameraMatrix(mtx, dist, (w, h), 1, (w, h))

    # Undistort khung h√¨nh
    undistorted = cv2.undistort(frame, mtx, dist, None, newcameramtx)

    # C·∫Øt v√πng ROI n·∫øu c·∫ßn (b·ªè n·∫øu mu·ªën xem to√†n b·ªô)
    x, y, w, h = roi
    undistorted_cropped = undistorted[y:y+h, x:x+w]

    # Hi·ªÉn th·ªã song song
    combined = np.hstack((cv2.resize(frame, (w, h)), cv2.resize(undistorted_cropped, (w, h))))
    cv2.imshow("Goc trai: Goc | Goc phai: Sau undistort", combined)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
